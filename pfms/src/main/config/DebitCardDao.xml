<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tom.pfms.dao.DebitCardDao">
    <sql id="querySql">
      <![CDATA[
         select t.debit_card_id debitCardId,
			s.bank_name bankName,
			t.bank_code bankCode,
			t.card_number cardNumber,
			t.account_name accountName,
			t.issue_bank_name issueBankName,
			t.card_balance cardBalance,
			t.currency_type currencyType,
			decode(t.belong_to_user, 'Y','自有', '其他') belongToUser,
			t.card_description cardDescription,
			decode(t.card_status, 'Y', '生效', '失效') cardStatus,
			t.service_phone servicePhone
			from fms_bank_debit_card_info t, fms_bank_tbl s
			where t.bank_code = s.bank_code
			and t.card_owner = #{requestObject.cardOwner}
		]]>
		<if test="requestObject.cardNumber != null and requestObject.cardNumber != ''">
		    and t.card_number like '%'  #{requestObject.cardNumber} || '%'
		</if>
		<if test="requestObject.accountName != null and requestObject.accountName != ''">
		    and t.account_name like '%' || #{requestObject.accountName} || '%'
		</if>
		<if test="requestObject.bankCode != null and requestObject.bankCode != ''">
		    and t.bank_code = #{requestObject.bankCode}
		</if>
		<if test="requestObject.debitCardId != null and requestObject.debitCardId != ''">
		    and t.debit_card_id = #{requestObject.debitCardId}
		</if>
		<if test="requestObject.belongToUser != null and requestObject.belongToUser != ''">
		    and t.belong_to_user = #{requestObject.belongToUser}
		</if>
		order by t.card_status desc, t.bank_code asc
    </sql>
    
    <sql id="pageTail">
        ) t where rownum &lt;= #{limit}) t1 where t1.rn &gt; #{offset}
    </sql>
    
    <sql id="pageHead">
        select * from (select rownum rn, t.* from (
    </sql>
    
    <sql id="countTail">
    <![CDATA[
        )
    ]]>
    </sql>
    
    <sql id="countHead">
        select count(1) from (
    </sql>
        
    <select id="queryDebitCards" parameterType="org.tom.pfms.common.dto.RequestParam" resultType="org.tom.pfms.common.dto.DebitCardDTO">
        <include refid="pageHead" />
        <include refid="querySql" />
        <include refid="pageTail" />
    </select>
    
    <select id="queryDebitCount" parameterType="org.tom.pfms.common.dto.RequestParam" resultType="Integer">
        <include refid="countHead" />
        <include refid="querySql" /> 
         <include refid="countTail" />
    </select>
    
    <update id="invalidDebit" parameterType="org.tom.pfms.common.dto.RequestParam">
        update fms_bank_debit_card_info t set t.card_status = 'N', time_modified = sysdate, user_modified=#{loginUserName} where debit_card_id = #{requestObject.debitCardId}
    </update>
    
    <insert id="saveDebit" parameterType="org.tom.pfms.common.dto.RequestParam">
       insert into FMS_BANK_DEBIT_CARD_INFO (
		   debit_card_id,
		   bank_code,
		   card_number,
		   account_name,
		   issue_bank_name,
		   card_balance,
		   currency_type,
		   card_description,
		   card_status,
		   belong_to_user,
		   card_owner,
		   service_phone,
		   user_created,
		   time_created,
		   user_modified,
		   time_modified,
		   remark)
		values (
		   seq_BANK_DEBIT_CARD_INFO.nextval,
		   #{requestObject.bankCode},
		   #{requestObject.cardNumber},
		   #{requestObject.accountName},
		   #{requestObject.issueBankName},
		   to_number(replace(#{requestObject.cardBalance},',','')),
		   #{requestObject.currencyType},
		   #{requestObject.cardDescription},
		   'Y',
		   #{requestObject.belongToUser},
		   #{loginUserName},
		   #{requestObject.servicePhone},
		   #{loginUserName},
		   sysdate,
		   #{loginUserName},
		   sysdate,
		   null
		)
    </insert>
    
    <update id="updateDebit" parameterType="org.tom.pfms.common.dto.RequestParam">
        update FMS_BANK_DEBIT_CARD_INFO t set (
		       bank_code,
		       card_number,
		       account_name,
		       issue_bank_name,
		       card_balance,
		       belong_to_user,
		       currency_type,
		       card_description,
		       service_phone,
		       user_modified,
		       time_modified
		) = ( select 
		       #{requestObject.bankCode},
		       #{requestObject.cardNumber},
		       #{requestObject.accountName},
		       #{requestObject.issueBankName},
		       to_number(replace(#{requestObject.cardBalance},',','')),
		       #{requestObject.belongToUser},
		       #{requestObject.currencyType},
		       #{requestObject.cardDescription},
		       #{requestObject.servicePhone},
		       #{loginUserName},
		       sysdate
		       from dual
		    ) where debit_card_id = #{requestObject.debitCardId}
    </update>
    
    <select id="queryDebitSummary" resultType="org.tom.pfms.common.dto.DebitSummaryDTO">
        with temp as
		 (select bank_code, currency_type, sum(card_balance) total_balance
		    from fms_bank_debit_card_info
		    where belong_to_user = 'Y'
		   group by bank_code, currency_type)
		select b.Bank_Name bankName,
		       t.bank_code bankCode,
		       t.currency_type currencyType,
		       to_char(t.total_balance, '99999999999.00') totalBalance
		  from temp t, fms_bank_tbl b
		 where t.bank_code = b.bank_code
    </select>
    
</mapper>